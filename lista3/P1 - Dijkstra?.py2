# DESISTI DE FAZER EM GO...
from heapq import *

n, m = map(int, raw_input().split())
adjacency_list = [[]]
distanceToRoot = [float("inf")]
predecessor = [None]
for i in xrange(1, n + 1):
  adjacency_list.append([])
  distanceToRoot.append(float("inf"))
  predecessor.append(None)

for i in xrange(m):
  a, b, w = map(int, raw_input().split())
  adjacency_list[a].append((b, w))
  adjacency_list[b].append((a, w))

min_heap = []
predecessor[1] = 1
distanceToRoot[1] = 0
heappush(min_heap, (0, 1))
while min_heap:
  distanceToRootFromU, uid = heappop(min_heap)
  for vid, weight in adjacency_list[uid]:
      distanceThroughU = distanceToRootFromU + weight
      if distanceToRoot[vid] > distanceThroughU:
        distanceToRoot[vid] = distanceThroughU
        predecessor[vid] = uid
        heappush(min_heap, (distanceThroughU, vid))

output = str(n)
nod = predecessor[n]
while nod != 1 and nod != None:
  output = str(nod) + " " + output
  nod = predecessor[nod]
output = "1 " + output

if nod != None:
  print(output)
else:
  print("-1")
